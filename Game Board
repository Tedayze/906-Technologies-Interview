package chesspuzzles;

import java.awt.Color;
import java.awt.Point;


public class GameBoard {
	
	public int size;
	private GameSquare[][] board;
	
	public GameBoard(int boardSize, Color darkSquare, Color lightSquare){
		size = boardSize;
		board = new GameSquare[boardSize][boardSize];
		for(int row = 0; row < boardSize; ++row){
			for(int column = 0; column < boardSize; ++column){
				Color requiredColor = (row+column)%2 == 0 
						? darkSquare
						: lightSquare;
				board[row][column] = new GameSquare(requiredColor);
			}
		}
			
	}
	
	public void placePieceAt(GamePiece aPiece, Point aPoint){
		board[(int) aPoint.getX()][(int) aPoint.getY()].place(aPiece);
	}
	
	public GameSquare getSquare(Point aPoint){
		return board[(int) aPoint.getX()][(int) aPoint.getY()];
	}
	
	public GamePiece getPieceAt(Point aPoint){
		return board[(int) aPoint.getX()][(int) aPoint.getY()].getPiece();
	}
	
	public boolean isEmptyAt(Point aPoint){
		return board[(int) aPoint.getX()][(int) aPoint.getY()].isEmpty();
	}
	
	public GamePiece removePieceAt(Point aPoint){
		return board[(int) aPoint.getX()][(int) aPoint.getY()].removePiece(board[(int) aPoint.getX()][(int) aPoint.getY()].getPiece());
	}
	
	public int size(){
		return size;
	}
	
}
